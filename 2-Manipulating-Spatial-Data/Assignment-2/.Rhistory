knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
library(leaflet)
library(raster)
library(sp)
library(tidyverse)
library(wesanderson)
# Load data ----
# utility data
url_malaria <- "https://raw.githubusercontent.com/HughSt/HughSt.github.io/master/course_materials/week1/Lab_files/Data/mal_data_eth_2009_no_dups.csv"
url_landuse <- "https://github.com/HughSt/HughSt.github.io/blob/master/course_materials/week2/Lab_files/ETH_land_use.tif?raw=true"
# Ethiopia admin boundaries
ETH_Adm_2 <- raster::getData("GADM", country="ETH", level = 2)
# Ethiopia malaria data
ETH_malaria_data <- read.csv(url_malaria, header=T)
# Convert data to SPDF
ETH_malaria_data_SPDF <- SpatialPointsDataFrame(
coords = ETH_malaria_data[,c("longitude", "latitude")],
data = ETH_malaria_data[,c("examined", "pf_pos", "pf_pr", "rural_urban")],
proj4string = CRS("+init=epsg:4326"))
# project data ----
crs(ETH_malaria_data_SPDF)
crs(ETH_Adm_2)
ETH_malaria_data_SPDF <- spTransform(ETH_malaria_data_SPDF, crs(ETH_Adm_2))
crs(ETH_malaria_data_SPDF)
crs(ETH_Adm_2)
ETH_Adm_2_per_point <- over(ETH_malaria_data_SPDF, ETH_Adm_2)
# calculate prevalence ----
Nexamined_per_Adm2 <- tapply(ETH_malaria_data_SPDF$examined,
ETH_Adm_2_per_point$NAME_2, sum)
Npositives_per_Adm2 <- tapply(ETH_malaria_data_SPDF$pf_pos,
ETH_Adm_2_per_point$NAME_2, sum)
prev_per_Adm2 <- Npositives_per_Adm2 / Nexamined_per_Adm2
prev_per_Adm2_df <- data.frame(NAME_2 = names(prev_per_Adm2),
prevalence = prev_per_Adm2,
row.names = NULL)
ETH_Adm_2 <- merge(ETH_Adm_2, prev_per_Adm2_df, by = "NAME_2")
ETH_malaria_data_SPDF$prevalence <- ETH_malaria_data_SPDF$pf_pos / ETH_malaria_data_SPDF$examined
# generate table using admin 2 level Ethiopia data and calculated prevalence value ----
prev_per_prov <- ETH_Adm_2 %>% as.data.frame() %>% select(NAME_2, prevalence) %>% na.omit()
prev_per_prov %>%
kable(col.names = c("Admin 2 Level", "Prevalence of Malaria Infection"), row.names = F) %>% kable_styling()
# generate basemap ----
basemap <- leaflet() %>% addProviderTiles("Esri.WorldGrayCanvas")
# define color ramp to use infection prevalence values as the legend ----
colorPal <- colorNumeric(wes_palette("Zissou1")[1:5], ETH_Adm_2$prevalence)
# drop admin 2 level boundaries that have no prevalence data (will use this throughout) ----
ETH_prev_Adm2_only <- subset(ETH_Adm_2, !is.na(ETH_Adm_2$prevalence))
# add admin 2 level boundaries layer ----
map_prev <- basemap %>% addPolygons(data=ETH_prev_Adm2_only, color="navy", weight = 1,
fillOpacity = 0.2) %>%
# add chloropleth of infection prevalence
addPolygons(data = ETH_prev_Adm2_only, weight = 1, col=colorPal(ETH_prev_Adm2_only$prevalence),
fillOpacity = 0.4, label = round(ETH_prev_Adm2_only$prevalence,5)) %>%
# add legend for infection prevalence
addLegend(pal = colorPal, values = ETH_prev_Adm2_only$prevalence,
title = "Infection </br> Prevalence")
map_prev
# load land use data ----
ETH_land_use <- raster(url_landuse)
# extract land use data to malaria data ----
ETH_malaria_data_SPDF$landuse <- raster::extract(ETH_land_use, ETH_malaria_data_SPDF)
# organize data into 2 tables to get prevalence rate by land use classifications ----
df_lu_prev <- ETH_malaria_data_SPDF %>%  as.data.frame() %>% select(landuse, prevalence) %>%
filter(prevalence != 0) %>% mutate(landuse = ifelse(landuse <= 30, "A11", "A12")) %>%
arrange(landuse, prevalence)
avg_lu_prev <- df_lu_prev %>% group_by(landuse) %>% summarise(avg_prev = mean(prevalence))
avg_lu_prev %>% kable(col.names = c("LCCS Entry Data", "Avg. Infection Prevalence")) %>% kable_styling()
bp1 <- avg_lu_prev %>% ggplot(aes(x=landuse, y=avg_prev)) + geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
xlab("Land Use Reclassified") + ylab("Infection Prevalence") +
ggtitle("Bar plot of average infection prevalence by land class") + theme_minimal()
bp1
bp2 <- df_lu_prev %>% ggplot(aes(x=landuse, y=prevalence, fill = prevalence)) +
geom_bar(stat="identity") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
xlab("Land Use Reclassified") + ylab("Infection Prevalence") +
ggtitle("Stacked bar plot of infection prevalence by land class") + theme_minimal()
bp2
boxplot1 <- df_lu_prev %>% ggplot(aes(x=landuse, y=prevalence, group=landuse)) +
geom_boxplot() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
xlab("Land Use Reclassified") + ylab("Infection Prevalence") +
ggtitle("Box plot of infection prevalence by land class") + theme_minimal()
boxplot1
make_map <- function(popup_label, column, rastercolor) {
# define color palette
colorPal <- colorNumeric("RdYlGn", ETH_prev_Adm2_only$prevalence)
# extract values of dataset to append column to ETH_Adm_2 boundaries data that does not include NAs
ETH_prev_Adm2_only$var <- raster::extract(column, ETH_prev_Adm2_only, fun=mean, na.rm=T)
# add bioclimatic data raster image as first layer
clim_map <- basemap %>% addRasterImage(column, colors = rastercolor, opacity = 2) %>%
# add boundaries layer
addPolygons(data=ETH_prev_Adm2_only, color="black", weight = 1, fillOpacity = 0)
# add legend for infection prevalence
clim_map <- clim_map %>% addLegend(pal = colorPal, values = ETH_prev_Adm2_only$prevalence,
title = "Infection Prevalence") %>%
# add infection prevalence chloropleth layer
addPolygons(data = ETH_prev_Adm2_only, weight = 2, col = colorPal(ETH_prev_Adm2_only$prevalence),
fillOpacity = 0.3, label = paste(popup_label, round(ETH_prev_Adm2_only$var, 2)))
clim_map
}
scatterplot <- function(df, xvar, yvar, xlab, ylab, ggtitle) {
df_plots %>%
ggplot(aes(x=xvar, y=yvar)) +  geom_point(shape=18, color="blue") +
geom_smooth(method=lm, linetype="dashed", color="darkred", fill="blue") + xlab(xlab) + ylab(ylab) + ggtitle(ggtitle) + theme_minimal()
}
barplot <- function(df, xvar, yvar, fill, xlab, ylab, ggtitle) {
df %>% ggplot(aes(x=xvar, y=yvar, fill = fill)) + geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + xlab(xlab) + ylab(ylab) +
ggtitle(ggtitle) + theme_minimal()
}
# load and crop world climate data to ethopia admin 2 boundaries ----
climate_eth <- getData('worldclim', var='bio', res=10) %>% raster::crop(ETH_prev_Adm2_only)
# extract bioclimatic data to cropped ethiopia raster data ----
ETH_malaria_data_SPDF$bio1 <- raster::extract(climate_eth$bio1, ETH_malaria_data_SPDF, fun=mean, na.rm=T)
ETH_malaria_data_SPDF$bio12 <- raster::extract(climate_eth$bio12, ETH_malaria_data_SPDF, fun=mean, na.rm=T)
# convert data to data.frame for easier use ----
df_plots <- ETH_malaria_data_SPDF %>% as.data.frame() %>%
select(latitude, longitude, rural_urban, landuse, bio1, bio12, prevalence) %>%
filter(prevalence != 0) %>% mutate(landuse = ifelse(landuse <= 30, "A11", "A12"))
# layer map of bio1 variable ----
map_meanannualmeantemp <- make_map("Mean of Annual Mean Temp:", climate_eth$bio1, "Blues")
map_meanannualmeantemp
scatterplot(df = df_plots, xvar = df_plots$bio1, yvar = df_plots$prevalence,
xlab = "Bio1", ylab = "Infection Prevalence",
ggtitle = "Scatterplot of Bio1 and Infection Prevalence")
barplot(df = df_plots, xvar = df_plots$rural_urban, yvar = df_plots$bio1,
fill = df_plots$prevalence, xlab = "Rural v. Unknown", ylab = "Bio1",
ggtitle = "Barplot of Bio1, Infection Prevalence, and Rural v. Unknown Sites")
map_meanannualprecip <- make_map("Mean Annual Precipitation:", climate_eth$bio12, "Purples")
map_meanannualprecip
scatterplot(df = df_plots, xvar = df_plots$bio12, yvar = df_plots$prevalence,
xlab = "Bio12", ylab = "Infection Prevalence",
ggtitle="Scatterplot of Bio12 and Infection Prevalence")
barplot(df = df_plots, xvar = df_plots$rural_urban, yvar = df_plots$bio12,
fill = df_plots$prevalence, xlab = "Rural v. Unknown", ylab = "Bio12",
ggtitle="Barplot of Bio12, Infection Prevalence, and Rural v. Unknown Sites")
