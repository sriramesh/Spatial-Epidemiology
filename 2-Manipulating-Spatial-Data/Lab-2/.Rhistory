library(raster)
BF_elev <- raster::getData("alt", country="BF")
bl_url <- "https://raw.githubusercontent.com/HughSt/HughSt.github.io/master/course_materials/week2/Lab_files/BF_land_use.tif"
pop_url <- "https://raw.githubusercontent.com/HughSt/HughSt.github.io/master/course_materials/week2/Assignment/BF_pop.tif"
bk_url <- "https://raw.githubusercontent.com/HughSt/HughSt.github.io/master/course_materials/week2/Lab_files/BF_land_use.tif"
pop_url <- "https://raw.githubusercontent.com/HughSt/HughSt.github.io/master/course_materials/week2/Assignment/BF_pop.tif"
# load burkina faso data and boundaries
BF_elev <- raster::getData("alt", country="BF")
BF_land_use <- raster(bk_url)
pop <- raster(pop_url)
crs(BF_land_use)
crs(BF_elev)
BF_land_use <- BF_land_use %>%
projectRaster(crs=crs(BF_elev), method="ngb")
library(tidyverse)
# reproject - can time a little time
BF_land_use <- BF_land_use %>%
projectRaster(crs=crs(BF_elev), method="ngb")
extent(BF_elev,499,507,301,309)
BF_elev_crop <- BF_elev %>% crop(extent(BF_elev,499,507,301,309))
BF_elev_crop
extent(BF_elev_crop)
extent(BF_elev,499,507,301,309)
pop_crop <- pop %>% crop(extent(BF_elev_crop)) #crop population layer to the extent of the BF_elev layer
BF_land_use_crop <- BF_land_use %>% crop(extent(BF_elev_crop)) #crop land use layer to extent of BF_elev layer
new_raster <- BF_elev_crop %>% aggregate(fact=3)
new_raster <- new_raster %>% raster::shift(dx=0.004, dy=0.002)
new_raster_outline <- new_raster %>% rasterToPolygons(dissolve=TRUE)
# plot the cropped elevation raster and overlay the grid of the new raster we are resample to
BF_elev_crop %>% plot()
# plot cell outlines
new_raster_outline %>% lines()
# plot the cropped elevation raster and overlay the grid of the new raster we are resample to
BF_elev_crop %>% plot()
# plot cell outlines
new_raster_outline %>% lines()
BF_elev_crop_resampled_bilin <- BF_elev_crop %>% resample(new_raster, method="bilinear")
BF_elev_crop_resampled_bilin %>% plot()
new_raster_outline %>% lines()
BF_land_use_crop %>% plot()
BF_elev_crop_resampled_bilin <- BF_elev_crop %>% resample(new_raster, method="bilinear")
BF_elev_crop_resampled_bilin %>% plot()
BF_elev_crop_resampled_bilin <- BF_elev_crop %>% resample(new_raster, method="bilinear")
# plot the cropped elevation raster and overlay the grid of the new raster we are resampling to
BF_elev_crop %>% plot()
# plot cell outlines
new_raster_outline %>% lines()
BF_elev_crop_resampled_bilin <- BF_elev_crop %>% resample(new_raster, method="bilinear")
BF_elev_crop_resampled_bilin %>% plot()
BF_elev_crop %>% plot()
# plot cell outlines
new_raster_outline %>% lines()
BF_elev_crop_resampled_bilin <- BF_elev_crop %>% resample(new_raster, method="bilinear")
BF_elev_crop_resampled_bilin %>% plot()
new_raster_outline %>% lines()
BF_land_use_crop %>% plot()
BF_land_use_crop
table(BF_land_use_crop[])
BF_land_use_crop %>% plot() #plot original raster
BF_land_use_crop
table(BF_land_use_crop[])
BF_land_use_crop_aggregated <- BF_land_use_crop %>% aggregate(fun='modal', fact = 9)
BF_land_use_crop_aggregated %>% plot()
new_raster_outline %>% lines()
BF_land_use_crop %>% plot() #plot original raster
# aggregate land use raster by factor of 9 and plot
BF_land_use_crop_aggregated <- BF_land_use_crop %>% aggregate(fun='modal', fact = 9)
BF_land_use_crop_aggregated %>% plot()
new_raster_outline %>% lines()
BF_land_use_crop_aggregated_resamp <- BF_land_use_crop_aggregated %>% resample(new_raster, method = "ngb")
BF_land_use_crop_aggregated_resamp %>% plot()
new_raster_outline %>% lines()
BF_land_use_crop %>% plot() #plot original raster
BF_land_use_crop %>% resample(new_raster, method = "ngb")
BF_land_use_crop_aggregated_resamp <- BF_land_use_crop %>% resample(new_raster, method = "ngb")
BF_land_use_crop_aggregated_resamp %>% plot()
new_raster_outline %>% lines()
BF_land_use_crop %>% plot()
new_raster_outline %>% lines()
BF_land_use_crop_aggregated_resamp <- BF_land_use_crop %>% resample(new_raster, method = "ngb")
BF_land_use_crop_aggregated_resamp %>% plot()
new_raster_outline %>% lines()
pop_crop
pop_crop[]
pop_crop %>% plot(col=topo.colors(64))
pop_crop %>% cellStats(sum) # we are summing per cell
pop_crop_aggregated <- pop_crop %>% aggregate(fact = 3.012048, fun = sum)
pop_crop_aggregated %>% cellStats(sum)
pop_crop_aggregated %>% plot(col=topo.colors(64))
new_raster_outline %>% lines()
pop_crop_aggregated_resamp <- pop_crop_aggregated %>% resample(new_raster)
pop_crop_aggregated_resamp <- pop_crop_aggregated %>% resample(new_raster)
pop_crop_aggregated_resamp %>% plot(col=topo.colors(64))
new_raster_outline %>% lines()
pop_crop_aggregated_resamp %>% cellStats(sum) # Not bad..
pop_crop_aggregated_resamp2 <- pop_crop_aggregated %>% resample(new_raster, method="bilinear")
pop_crop_aggregated_resamp2 %>% cellStats(sum)
pop_crop_aggregated_resamp2 <- pop_crop_aggregated %>% resample(new_raster, method="bilinear")
pop_crop_aggregated_resamp2 %>% cellStats(sum)
