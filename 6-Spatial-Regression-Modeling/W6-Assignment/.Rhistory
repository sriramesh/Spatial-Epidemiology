correlogram_2_spatial %>% subset(variable %in% "residuals_glm") %>% ggplot(aes(dist.class, coef)) +
geom_hline(yintercept = 0, col="grey") +
geom_line(col="steelblue") +
geom_point(col="steelblue") +
xlab("distance") +
ylab("Moran's coefficient")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle("Correlogram, after spatial effect included")
# re-testing for residual spatial autocorrelation in Model 2 ----
nbc <- 10
# Model 2
cor_r_2_spatial <- pgirmess::correlog(coords = BCG_vaccination_UGA %>% select(lng, lat),
z = residuals(glm_mod_2_spatial),
method="Moran", nbclass=nbc)
# view correlogram
cor_r_2_spatial
# plot correlogram
correlogram_2_spatial <- cor_r_2_spatial %>% as.data.frame
correlogram_2_spatial$variable <- "residuals_glm"
correlogram_2_spatial %>% subset(variable %in% "residuals_glm") %>% ggplot(aes(dist.class, coef)) +
geom_hline(yintercept = 0, col="grey") +
geom_line(col="steelblue") +
geom_point(col="steelblue") +
xlab("distance") +
ylab("Moran's coefficient")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle("Correlogram, after spatial effect included")
# 3 use Model 4 (univariate model regressing vaccine prevalence on nighttime lights in 2013) to predict ----
# prepare window to predict over: Kampala, Uganda
UGA_Adm_1 <- raster::getData("GADM", country="UGA", level=1) # Uganda boundaries
proj4string(UGA_Adm_1) <- CRS('+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ')
Kampala <- UGA_Adm_1 %>% subset(NAME_1 %in% "Kampala")
ntl_2013_kampala <- ntl_2013_raster %>% crop(Kampala)
# predict over NTL 2013 raster and plot predicted values after masking to Kampala
pred_raster <- ntl_2013_kampala
names(pred_raster) <- c("ntl_2013")
predicted_risk_masked <- raster::predict(pred_raster, glm_mod_4, type='response') %>% mask(Kampala)
predicted_risk_masked %>% plot()
# Make predictions using the stack of covariates and the spatial GLM, then clip and mask to Kampala
latitude_raster <- longitude_raster <- raster(nrows = ntl_2013_kampala %>% nrow(),
ncols = ntl_2013_kampala %>% ncol(),
ext = ntl_2013_kampala %>% extent())
longitude_raster[] <- coordinates(longitude_raster)[,1]
latitude_raster[] <- coordinates(latitude_raster)[,2]
pred_stack <- stack(ntl_2013_kampala, longitude_raster, latitude_raster)
names(pred_stack) <- c("ntl_2013", "lng", "lat")
pred_stack %>% plot()
predicted_prevalence_raster <- pred_stack %>% predict(glm_mod_4_spatial)
predicted_prevalence_raster_kampala <- predicted_prevalence_raster %>% mask(Kampala)
predicted_prevalence_raster_kampala %>% plot()
# CV model validation -----
# take 20% to act as validation set
set.seed(1)
validation_rows <- 1:nrow(BCG_vaccination_UGA) %>% sample(40)
BCG_vaccination_UGA_train <- BCG_vaccination_UGA[-validation_rows,] # training sets
BCG_vaccination_UGA_valid <- BCG_vaccination_UGA[validation_rows,] # validation, will predict these using training sets
# Fit spatial GLM on only the training data
glm_mod_2_spatial_validation <- spaMM::fitme(cbind(number_positive, numer_examined - number_positive) ~
dist_to_water + dist_to_railroads + ntl_2013 + Matern(1|lat+lng), data=BCG_vaccination_UGA_train,
family=binomial())
# Use spatial GLM to predict the 20% validation data and compare with actual data to see how well the model did
predictions_validation <- glm_mod_2_spatial_validation %>% predict(BCG_vaccination_UGA_valid)
ggplot() + geom_point(aes(predictions_validation %>% as.vector(), BCG_vaccination_UGA_valid$prevalence))
# Calculate mse
predictions_validation %>% mse(BCG_vaccination_UGA_valid$prevalence)
# 2 check fitted values for Models 2 and 4 -----
plot_2 <- ggplot() + geom_point(aes(glm_mod_2$fitted, BCG_vaccination_UGA$prevalence)) +
ggtitle("BCG Vaccination Prevalence, predicted (or fitted) by Model 2 vs. observed in data")
plot_2
plot_4 <- ggplot() + geom_point(aes(glm_mod_4$fitted, BCG_vaccination_UGA$prevalence)) +
ggtitle("BCG Vaccination Prevalence, predicted by Model 4 vs. observed in data")
plot_4
# re-testing for residual spatial autocorrelation in Model 2 ----
nbc <- 10
# Model 2
cor_r_2_spatial <- pgirmess::correlog(coords = BCG_vaccination_UGA %>% select(lng, lat),
z = residuals(glm_mod_2_spatial),
method="Moran", nbclass=nbc)
# view correlogram
cor_r_2_spatial
# plot correlogram
correlogram_2_spatial <- cor_r_2_spatial %>% as.data.frame
correlogram_2_spatial$variable <- "residuals_glm"
correlogram_2_spatial %>% subset(variable %in% "residuals_glm") %>% ggplot(aes(dist.class, coef)) +
geom_hline(yintercept = 0, col="grey") +
geom_line(col="steelblue") +
geom_point(col="steelblue") +
xlab("distance") +
ylab("Moran's coefficient")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle("Correlogram, after spatial effect included")
# view model residuals
plot_4 <- ggplot() + geom_point(aes(glm_mod_2_spatial$fitted, BCG_vaccination_UGA$prevalence)) +
ggtitle("BCG Vaccination Prevalence, predicted by Model 4 (with spatial effect) vs. observed in data")
plot_4
View(glm_mod_2_spatial)
?spaMM::fitme
# re-testing for residual spatial autocorrelation in Model 2 ----
nbc <- 10
# Model 2
cor_r_2_spatial <- pgirmess::correlog(coords = BCG_vaccination_UGA %>% select(lng, lat),
z = residuals(glm_mod_2_spatial),
method="Moran", nbclass=nbc)
# view correlogram
cor_r_2_spatial
# plot correlogram
correlogram_2_spatial <- cor_r_2_spatial %>% as.data.frame
correlogram_2_spatial$variable <- "residuals_glm"
correlogram_2_spatial %>% subset(variable %in% "residuals_glm") %>% ggplot(aes(dist.class, coef)) +
geom_hline(yintercept = 0, col="grey") +
geom_line(col="steelblue") +
geom_point(col="steelblue") +
xlab("distance") +
ylab("Moran's coefficient")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle("Correlogram, after spatial effect included")
# view model residuals
plot_4 <- ggplot() + geom_point(aes(glm_mod_2_spatial$fv, BCG_vaccination_UGA$prevalence)) +
ggtitle("BCG Vaccination Prevalence, predicted by Model 4 (with spatial effect) vs. observed in data")
plot_4
# re-testing for residual spatial autocorrelation in Model 2 ----
nbc <- 10
# Model 2
cor_r_2_spatial <- pgirmess::correlog(coords = BCG_vaccination_UGA %>% select(lng, lat),
z = residuals(glm_mod_2_spatial),
method="Moran", nbclass=nbc)
# view correlogram
cor_r_2_spatial
# plot correlogram
correlogram_2_spatial <- cor_r_2_spatial %>% as.data.frame
correlogram_2_spatial$variable <- "residuals_glm"
correlogram_2_spatial %>% subset(variable %in% "residuals_glm") %>% ggplot(aes(dist.class, coef)) +
geom_hline(yintercept = 0, col="grey") +
geom_line(col="steelblue") +
geom_point(col="steelblue") +
xlab("distance") +
ylab("Moran's coefficient")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle("Correlogram, after spatial effect included")
# view model residuals
plot_4 <- ggplot() + geom_point(aes(glm_mod_2_spatial$fv, BCG_vaccination_UGA$prevalence)) +
xlab("Fitted BCG Vaccination Prevalence") +
ylab("Observed BCG Vaccination Prevalence") +
ggtitle("BCG Vaccination Prevalence Fitted v. Observed, Model 4 (with spatial effect)")
plot_4
# 2 check fitted values for Models 2 and 4 -----
plot_2 <- ggplot() + geom_point(aes(glm_mod_2$fitted, BCG_vaccination_UGA$prevalence)) +
xlab("Fitted BCG Vaccination Prevalence") +
ylab("Observed BCG Vaccination Prevalence") +
ggtitle("BCG Vaccination Prevalence Fitted v. Observed, Model 2 (no spatial effect)")
plot_2
plot_4 <- ggplot() + geom_point(aes(glm_mod_4$fitted, BCG_vaccination_UGA$prevalence)) +
xlab("Fitted BCG Vaccination Prevalence") +
ylab("Observed BCG Vaccination Prevalence") +
ggtitle("BCG Vaccination Prevalence Fitted v. Observed, Model 4 (no spatial effect)")
plot_4
# 2 check fitted values for Model 4 -----
plot_4 <- ggplot() + geom_point(aes(glm_mod_4$fitted, BCG_vaccination_UGA$prevalence)) +
xlab("Fitted BCG Vaccination Prevalence") +
ylab("Observed BCG Vaccination Prevalence") +
ggtitle("BCG Vaccination Prevalence Fitted v. Observed, Model 4 (no spatial effect)")
plot_4
nbc <- 10
cor_r_2 <- pgirmess::correlog(coords=BCG_vaccination_UGA %>% select(lng, lat),
z=glm_mod_2$residuals,
method="Moran", nbclass=nbc)
# view correlogram
cor_r_2 # definite clustering up to 1.7 decimal degrees
# plot correlogram
correlogram_2 <- cor_r_2 %>% as.data.frame
correlogram_2$variable <- "residuals_glm"
correlogram_2 %>% subset(variable %in% "residuals_glm") %>% ggplot(aes(dist.class, coef)) +
geom_hline(yintercept = 0, col="grey") +
geom_line(col="steelblue") +
geom_point(col="steelblue") +
xlab("distance") +
ylab("Moran's coefficient")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle("Correlogram for Model 2 (no spatial effect)")
cor_r_4 <- pgirmess::correlog(coords=BCG_vaccination_UGA %>% select(lng, lat),
z=glm_mod_4$residuals,
method="Moran", nbclass=nbc)
# view correlogram
cor_r_4 # definite clustering up to 1.7 decimal degrees
# plot correlogram
correlogram_4 <- cor_r_4 %>% as.data.frame
correlogram_4$variable <- "residuals_glm"
correlogram_4 %>% subset(variable %in% "residuals_glm") %>% ggplot(aes(dist.class, coef)) +
geom_hline(yintercept = 0, col="grey") +
geom_line(col="steelblue") +
geom_point(col="steelblue") +
xlab("distance") +
ylab("Moran's coefficient")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle("Correlogram, before spatial effect included")
# load vaccination data and calculate vaccine prevalence
BCG_vaccination_UGA <- "BCG_vaccination_UGA.txt" %>%
read.table(header = T, sep = ",", dec = ".") %>%
mutate(prevalence = number_positive / numer_examined)
# load covariates and set crs ----
ntl_2013_raster <- 'gp2013africa.tif' %>% raster() # Annual mighttime lights (NTL) images for Africa, 2013
roads <- readOGR("UGA_rds", "UGA_roads") #roads in Uganda
railroads <- readOGR("UGA_rrd", "UGA_rails") #railroads in Uganda
waterbodies <- readOGR("UGA_wat", "UGA_water_areas_dcw") #inland waterbodies in Uganda
# convert to spdf
BCG_vaccination_UGA_spdf <- SpatialPointsDataFrame(coords = BCG_vaccination_UGA %>% select(lng,lat),
data = BCG_vaccination_UGA %>% select(ID, numer_examined, number_positive, prevalence))
health_facilities_spdf <- SpatialPointsDataFrame(coords = health_facilities %>% select(Long,Lat),
data = health_facilities %>% select(Facility.name, Lat, Long))
# load vaccination data and calculate vaccine prevalence
BCG_vaccination_UGA <- "BCG_vaccination_UGA.txt" %>%
read.table(header = T, sep = ",", dec = ".") %>%
mutate(prevalence = number_positive / numer_examined)
# load covariates and set crs ----
ntl_2013_raster <- 'gp2013africa.tif' %>% raster() # Annual mighttime lights (NTL) images for Africa, 2013
roads <- readOGR("UGA_rds", "UGA_roads") #roads in Uganda
railroads <- readOGR("UGA_rrd", "UGA_rails") #railroads in Uganda
waterbodies <- readOGR("UGA_wat", "UGA_water_areas_dcw") #inland waterbodies in Uganda
# convert to spdf
BCG_vaccination_UGA_spdf <- SpatialPointsDataFrame(coords = BCG_vaccination_UGA %>% select(lng,lat),
data = BCG_vaccination_UGA %>% select(ID, numer_examined, number_positive, prevalence))
health_facilities_spdf <- SpatialPointsDataFrame(coords = health_facilities %>% select(Long,Lat),
data = health_facilities %>% select(Facility.name, Lat, Long))
# load vaccination data and calculate vaccine prevalence
BCG_vaccination_UGA <- "BCG_vaccination_UGA.txt" %>%
read.table(header = T, sep = ",", dec = ".") %>%
mutate(prevalence = number_positive / numer_examined)
# load covariates and set crs ----
ntl_2013_raster <- 'gp2013africa.tif' %>% raster() # Annual mighttime lights (NTL) images for Africa, 2013
roads <- readOGR("UGA_rds", "UGA_roads") #roads in Uganda
railroads <- readOGR("UGA_rrd", "UGA_rails") #railroads in Uganda
waterbodies <- readOGR("UGA_wat", "UGA_water_areas_dcw") #inland waterbodies in Uganda
# convert to spdf
BCG_vaccination_UGA_spdf <- SpatialPointsDataFrame(coords = BCG_vaccination_UGA %>% select(lng,lat),
data = BCG_vaccination_UGA %>% select(ID, numer_examined, number_positive, prevalence))
knitr::opts_chunk$set(echo = TRUE)
# load libraries ----
library(ggplot2)
library(raster)
library(ModelMetrics)
library(spaMM)
library(tidyverse)
library(rgdal)
library(spatstat)
library(plotrix)
library(fields)
library(leaflet)
library(maptools)
library(RColorBrewer)
library(lattice)
library(geoR)
library(geosphere)
# global options
options(stringsAsFactors = F) # import quality
par(mar=c(1,1,1,1)) # ensure plot margin sizes are always large enough
# load vaccination data and calculate vaccine prevalence
BCG_vaccination_UGA <- "BCG_vaccination_UGA.txt" %>%
read.table(header = T, sep = ",", dec = ".") %>%
mutate(prevalence = number_positive / numer_examined)
# load covariates and set crs ----
ntl_2013_raster <- 'gp2013africa.tif' %>% raster() # Annual mighttime lights (NTL) images for Africa, 2013
roads <- readOGR("UGA_rds", "UGA_roads") #roads in Uganda
railroads <- readOGR("UGA_rrd", "UGA_rails") #railroads in Uganda
waterbodies <- readOGR("UGA_wat", "UGA_water_areas_dcw") #inland waterbodies in Uganda
# convert to spdf
BCG_vaccination_UGA_spdf <- SpatialPointsDataFrame(coords = BCG_vaccination_UGA %>% select(lng,lat),
data = BCG_vaccination_UGA %>% select(ID, numer_examined, number_positive, prevalence))
# dist_to_water <- BCG_vaccination_UGA_spdf %>% dist2Line(waterbodies) #takes a while
# dist_to_roads <- BCG_vaccination_UGA_spdf %>% dist2Line(roads) #takes forever, see pre-written csv file
# dist_to_railroads <- BCG_vaccination_UGA_spdf %>% dist2Line(railroads)
# BCG_vaccination_UGA_spdf$dist_to_water <- dist_to_water[,1]
# BCG_vaccination_UGA_spdf$dist_to_roads <- dist_to_roads[,1]
# BCG_vaccination_UGA_spdf$dist_to_railroads <- dist_to_railroads[,1]
# convert spdf to df and append nighttime lights raster layer
# BCG_vaccination_UGA <- BCG_vaccination_UGA_spdf %>% as.data.frame()
#BCG_vaccination_UGA <- BCG_vaccination_UGA %>%
#  mutate(ntl_2013 = raster::extract(ntl_2013_raster, BCG_vaccination_UGA %>% select(lng, lat)))
BCG_vaccination_UGA <- read.csv("BCG_vaccination_UGA.csv")
BCG_vaccination_UGA %>% colnames()
# adding a spatial component to our models ----
glm_mod_2_spatial <- spaMM::fitme(cbind(number_positive, numer_examined - number_positive) ~
dist_to_water + dist_to_railroads + ntl_2013 +
Matern(1|lat+lng),
data=BCG_vaccination_UGA, family=binomial())
glm_mod_2_spatial %>% summary()
# fit matern covariance model (i.e. spatial model)
glm_mod_2_spatial <- spaMM::fitme(cbind(number_positive, numer_examined - number_positive) ~
dist_to_water + dist_to_railroads + ntl_2013 +
Matern(1|lat+lng),
data=BCG_vaccination_UGA, family=binomial())
glm_mod_2_spatial %>% summary()
# view and plot correlogram with spatially correlated fixed effect
nbc <- 10
cor_r_2_spatial <- pgirmess::correlog(coords = BCG_vaccination_UGA %>% select(lng, lat),
z = residuals(glm_mod_2_spatial),
method="Moran", nbclass=nbc)
cor_r_2_spatial
correlogram_2_spatial <- cor_r_2_spatial %>% as.data.frame
correlogram_2_spatial$variable <- "residuals_glm"
correlogram_2_spatial %>% subset(variable %in% "residuals_glm") %>% ggplot(aes(dist.class, coef)) +
geom_hline(yintercept = 0, col="grey") +
geom_line(col="steelblue") +
geom_point(col="steelblue") +
xlab("distance") +
ylab("Moran's coefficient")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle("Correlogram, after spatial effect included")
# view spatial model residuals
plot_2 <- ggplot() + geom_point(aes(glm_mod_2_spatial$fv, BCG_vaccination_UGA$prevalence)) +
xlab("Fitted BCG Vaccination Prevalence") +
ylab("Observed BCG Vaccination Prevalence") +
ggtitle("BCG Vaccination Prevalence Fitted v. Observed, Model 2 with spatial effect")
plot_2
# take 20% to act as validation set
set.seed(1)
validation_rows <- 1:nrow(BCG_vaccination_UGA) %>% sample(40)
BCG_vaccination_UGA_train <- BCG_vaccination_UGA[-validation_rows,] # training sets
BCG_vaccination_UGA_valid <- BCG_vaccination_UGA[validation_rows,] # validation, will predict these using training sets
# Fit spatial GLM on only the training data
glm_mod_2_spatial_validation <- spaMM::fitme(cbind(number_positive, numer_examined - number_positive) ~
dist_to_water + dist_to_railroads + ntl_2013 + Matern(1|lat+lng), data=BCG_vaccination_UGA_train,
family=binomial())
# Use spatial GLM to predict the 20% validation data and compare with actual data to see how well the model did
predictions_validation <- glm_mod_2_spatial_validation %>% predict(BCG_vaccination_UGA_valid)
ggplot() + geom_point(aes(predictions_validation %>% as.vector(), BCG_vaccination_UGA_valid$prevalence))
# Calculate mse
predictions_validation %>% mse(BCG_vaccination_UGA_valid$prevalence)
# take 20% to act as validation set
set.seed(1)
validation_rows <- 1:nrow(BCG_vaccination_UGA) %>% sample(40)
BCG_vaccination_UGA_train <- BCG_vaccination_UGA[-validation_rows,] # training sets
BCG_vaccination_UGA_valid <- BCG_vaccination_UGA[validation_rows,] # validation, will predict these using training sets
# Fit spatial GLM on only the training data
glm_mod_2_spatial_validation <- spaMM::fitme(cbind(number_positive, numer_examined - number_positive) ~
dist_to_water + dist_to_railroads + ntl_2013 + Matern(1|lat+lng), data=BCG_vaccination_UGA_train,
family=binomial())
# Use spatial GLM to predict the 20% validation data and compare with actual data to see how well the model did
predictions_validation <- glm_mod_2_spatial_validation %>% predict(BCG_vaccination_UGA_valid)
ggplot() + geom_point(aes(predictions_validation %>% as.vector(), BCG_vaccination_UGA_valid$prevalence)) +
xlab("Validated predicted values of prevalence") +
ylab("Validated observed values of prevalence") +
ggtitle("Predicted vs. Observed BCG Vaccination Prevalence, Spatial GLM Model 2, Validated")
# Calculate mse
predictions_validation %>% mse(BCG_vaccination_UGA_valid$prevalence)
# prepare window to predict over: Kampala, Uganda
UGA_Adm_1 <- raster::getData("GADM", country="UGA", level=1) # Uganda boundaries
proj4string(UGA_Adm_1) <- CRS('+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ')
Kampala <- UGA_Adm_1 %>% subset(NAME_1 %in% "Kampala")
ntl_2013_kampala <- ntl_2013_raster %>% crop(Kampala)
pred_raster <- ntl_2013_kampala
names(pred_raster) <- c("ntl_2013")
predicted_risk_masked <- raster::predict(pred_raster, glm_mod_4, type='response') %>% mask(Kampala)
predicted_risk_masked %>% plot()
# prepare window to predict over: Kampala, Uganda
UGA_Adm_1 <- raster::getData("GADM", country="UGA", level=1) # Uganda boundaries
proj4string(UGA_Adm_1) <- CRS('+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ')
Kampala <- UGA_Adm_1 %>% subset(NAME_1 %in% "Kampala")
ntl_2013_kampala <- ntl_2013_raster %>% crop(Kampala)
pred_raster <- ntl_2013_kampala
names(pred_raster) <- c("ntl_2013")
predicted_risk_masked <- raster::predict(pred_raster, glm_mod_4, type='response') %>% mask(Kampala)
predicted_risk_masked %>% plot(main="Predicted values of BCG Vaccination Prevalance, non-spatial univariate GLM")
# prepare window to predict over: Kampala, Uganda
UGA_Adm_1 <- raster::getData("GADM", country="UGA", level=1) # Uganda boundaries
proj4string(UGA_Adm_1) <- CRS('+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ')
Kampala <- UGA_Adm_1 %>% subset(NAME_1 %in% "Kampala")
ntl_2013_kampala <- ntl_2013_raster %>% crop(Kampala)
pred_raster <- ntl_2013_kampala
names(pred_raster) <- c("ntl_2013")
predicted_risk_masked <- raster::predict(pred_raster, glm_mod_4, type='response') %>% mask(Kampala)
predicted_risk_masked %>% plot(main="Predicted BCG Vaccination Prevalance, non-spatial univariate GLM")
?raster::plot
# prepare window to predict over: Kampala, Uganda
UGA_Adm_1 <- raster::getData("GADM", country="UGA", level=1) # Uganda boundaries
proj4string(UGA_Adm_1) <- CRS('+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ')
Kampala <- UGA_Adm_1 %>% subset(NAME_1 %in% "Kampala")
ntl_2013_kampala <- ntl_2013_raster %>% crop(Kampala)
pred_raster <- ntl_2013_kampala
names(pred_raster) <- c("ntl_2013")
predicted_risk_masked <- raster::predict(pred_raster, glm_mod_4, type='response') %>% mask(Kampala)
predicted_risk_masked %>% plot(xlab="Latitude", ylab="Longitude",
main="Predicted BCG Vaccination Prevalance, non-spatial univariate GLM")
# prepare window to predict over: Kampala, Uganda
UGA_Adm_1 <- raster::getData("GADM", country="UGA", level=1) # Uganda boundaries
proj4string(UGA_Adm_1) <- CRS('+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ')
Kampala <- UGA_Adm_1 %>% subset(NAME_1 %in% "Kampala")
ntl_2013_kampala <- ntl_2013_raster %>% crop(Kampala)
pred_raster <- ntl_2013_kampala
names(pred_raster) <- c("ntl_2013")
predicted_risk_masked <- raster::predict(pred_raster, glm_mod_4, type='response') %>% mask(Kampala)
predicted_risk_masked %>% plot(xlab="Latitude", ylab="Longitude",
main="Predicted BCG Vaccination Prevalance, non-spatial univariate GLM")
Kampala %>% lines()
# predict over NTL 2013 raster and plot predicted values after masking to Kampala
latitude_raster <- longitude_raster <- raster(nrows = ntl_2013_kampala %>% nrow(),
ncols = ntl_2013_kampala %>% ncol(),
ext = ntl_2013_kampala %>% extent())
longitude_raster[] <- coordinates(longitude_raster)[,1]
latitude_raster[] <- coordinates(latitude_raster)[,2]
pred_stack <- stack(ntl_2013_kampala, longitude_raster, latitude_raster)
names(pred_stack) <- c("ntl_2013", "lng", "lat")
pred_stack %>% plot()
glm_mod_4_spatial <- spaMM::fitme(cbind(number_positive, numer_examined - number_positive) ~
ntl_2013 + Matern(1|lat+lng),
data=BCG_vaccination_UGA, family=binomial())
# predict over NTL 2013 raster and plot predicted values after masking to Kampala
latitude_raster <- longitude_raster <- raster(nrows = ntl_2013_kampala %>% nrow(),
ncols = ntl_2013_kampala %>% ncol(),
ext = ntl_2013_kampala %>% extent())
longitude_raster[] <- coordinates(longitude_raster)[,1]
latitude_raster[] <- coordinates(latitude_raster)[,2]
pred_stack <- stack(ntl_2013_kampala, longitude_raster, latitude_raster)
names(pred_stack) <- c("ntl_2013", "lng", "lat")
glm_mod_4_spatial <- spaMM::fitme(cbind(number_positive, numer_examined - number_positive) ~
ntl_2013 + Matern(1|lat+lng),
data=BCG_vaccination_UGA, family=binomial())
latitude_raster <- longitude_raster <- raster(nrows = ntl_2013_kampala %>% nrow(),
ncols = ntl_2013_kampala %>% ncol(),
ext = ntl_2013_kampala %>% extent())
longitude_raster[] <- coordinates(longitude_raster)[,1]
latitude_raster[] <- coordinates(latitude_raster)[,2]
pred_stack <- stack(ntl_2013_kampala, longitude_raster, latitude_raster)
names(pred_stack) <- c("ntl_2013", "lng", "lat")
glm_mod_4_spatial <- spaMM::fitme(cbind(number_positive, numer_examined - number_positive) ~
ntl_2013 + Matern(1|lat+lng),
data=BCG_vaccination_UGA, family=binomial())
predicted_prevalence_raster <- pred_stack %>% predict(glm_mod_4_spatial)
predicted_prevalence_raster_kampala <- predicted_prevalence_raster %>% mask(Kampala)
predicted_prevalence_raster_kampala %>% plot()
latitude_raster <- longitude_raster <- raster(nrows = ntl_2013_kampala %>% nrow(),
ncols = ntl_2013_kampala %>% ncol(),
ext = ntl_2013_kampala %>% extent())
longitude_raster[] <- coordinates(longitude_raster)[,1]
latitude_raster[] <- coordinates(latitude_raster)[,2]
pred_stack <- stack(ntl_2013_kampala, longitude_raster, latitude_raster)
names(pred_stack) <- c("ntl_2013", "lng", "lat")
glm_mod_4_spatial <- spaMM::fitme(cbind(number_positive, numer_examined - number_positive) ~
ntl_2013 + Matern(1|lat+lng),
data=BCG_vaccination_UGA, family=binomial())
predicted_prevalence_raster <- pred_stack %>% predict(glm_mod_4_spatial)
predicted_prevalence_raster_kampala <- predicted_prevalence_raster %>% mask(Kampala)
predicted_prevalence_raster_kampala %>% plot(main="Predicted prevalance, Matern model",
xlab="Latitude",
ylab="Longitude")
Kampala %>% lines()
# prepare window to predict over: Kampala, Uganda
UGA_Adm_1 <- raster::getData("GADM", country="UGA", level=1) # Uganda boundaries
proj4string(UGA_Adm_1) <- CRS('+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ')
Kampala <- UGA_Adm_1 %>% subset(NAME_1 %in% "Kampala")
ntl_2013_kampala <- ntl_2013_raster %>% crop(Kampala)
ntl_2013_kampala %>% plot()
# prepare window to predict over: Kampala, Uganda
UGA_Adm_1 <- raster::getData("GADM", country="UGA", level=1) # Uganda boundaries
proj4string(UGA_Adm_1) <- CRS('+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ')
Kampala <- UGA_Adm_1 %>% subset(NAME_1 %in% "Kampala")
ntl_2013_kampala <- ntl_2013_raster %>% crop(Kampala)
ntl_2013_kampala %>% plot(main="Prediction raster, 2013 Nighttime lights in Kampala region",
xlab="Latitude", ylab="Longitude")
# prepare window to predict over: Kampala, Uganda
UGA_Adm_1 <- raster::getData("GADM", country="UGA", level=1) # Uganda boundaries
proj4string(UGA_Adm_1) <- CRS('+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ')
Kampala <- UGA_Adm_1 %>% subset(NAME_1 %in% "Kampala")
ntl_2013_kampala <- ntl_2013_raster %>% crop(Kampala)
ntl_2013_kampala %>% plot(main="Prediction raster, 2013 Nighttime lights in Kampala region",
xlab="Latitude", ylab="Longitude")
pred_raster <- ntl_2013_kampala
names(pred_raster) <- c("ntl_2013")
predicted_risk_masked <- raster::predict(pred_raster, glm_mod_4, type='response') %>% mask(Kampala)
predicted_risk_masked %>% plot(xlab="Latitude", ylab="Longitude",
main="Predicted prevalence, univariate GLM")
Kampala %>% lines()
# prepare window to predict over: Kampala, Uganda
UGA_Adm_1 <- raster::getData("GADM", country="UGA", level=1) # Uganda boundaries
proj4string(UGA_Adm_1) <- CRS('+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 ')
Kampala <- UGA_Adm_1 %>% subset(NAME_1 %in% "Kampala")
ntl_2013_kampala <- ntl_2013_raster %>% crop(Kampala) %>% mask(Kampala)
ntl_2013_kampala %>% plot(main="Prediction raster, 2013 Nighttime lights in Kampala region",
xlab="Latitude", ylab="Longitude")
Kampala %>% lines()
latitude_raster <- longitude_raster <- raster(nrows = ntl_2013_kampala %>% nrow(),
ncols = ntl_2013_kampala %>% ncol(),
ext = ntl_2013_kampala %>% extent())
longitude_raster[] <- coordinates(longitude_raster)[,1]
latitude_raster[] <- coordinates(latitude_raster)[,2]
pred_stack <- stack(ntl_2013_kampala, longitude_raster, latitude_raster)
names(pred_stack) <- c("ntl_2013", "lng", "lat")
glm_mod_4_spatial <- spaMM::fitme(cbind(number_positive, numer_examined - number_positive) ~
ntl_2013 + Matern(1|lat+lng),
data=BCG_vaccination_UGA, family=binomial())
latitude_raster <- longitude_raster <- raster(nrows = ntl_2013_kampala %>% nrow(),
ncols = ntl_2013_kampala %>% ncol(),
ext = ntl_2013_kampala %>% extent())
longitude_raster[] <- coordinates(longitude_raster)[,1]
latitude_raster[] <- coordinates(latitude_raster)[,2]
pred_stack <- stack(ntl_2013_kampala, longitude_raster, latitude_raster)
names(pred_stack) <- c("ntl_2013", "lng", "lat")
glm_mod_4_spatial <- spaMM::fitme(cbind(number_positive, numer_examined - number_positive) ~
ntl_2013 + Matern(1|lat+lng),
data=BCG_vaccination_UGA, family=binomial())
predicted_prevalence_raster <- pred_stack %>% predict(glm_mod_4_spatial)
predicted_prevalence_raster_kampala <- predicted_prevalence_raster %>% mask(Kampala)
predicted_prevalence_raster_kampala %>% plot(main="Predicted prevalence, Matern model",
xlab="Latitude", ylab="Longitude")
Kampala %>% lines()
